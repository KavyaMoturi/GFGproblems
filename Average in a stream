//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{
public:	
	vector<float> streamAvg(int arr[], int n) {
	    // creating a vector to store the stream dynamically
	     vector<float> ans;
	      float sum=0;
	      float k;
	     for(int i=0 ;i<n;i++){
        //sum of elements in the stream
	         sum+=arr[i];
          //k is the average of the stream
	         k=sum/(i+1);
          //pushing the average in vector
	         ans.push_back(k);
	     }
	     return ans;
	     
	    }
	
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.streamAvg(arr, n);
        cout << fixed<< setprecision(2);
        for (auto x : ans) {
            cout <<x<<" ";
        }
        cout << "\n";
    }
    return 0;
}

// } Driver Code Ends
